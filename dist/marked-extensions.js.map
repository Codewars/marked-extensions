{"version":3,"file":"marked-extensions.js","sources":["../src/objects.js","../src/renderer.js","../src/strings.js","../src/doc-tokens/doc-types.js","../src/doc-tokens/doc-names.js","../src/doc-tokens/doc-globals.js","../node_modules/scriptjs/dist/script.js","../src/loader.js","../src/index.js"],"sourcesContent":["/**\n * Assigns the keys from source into target, but only those that are not already assigned. Useful\n * in place of Object.assign which would require a polyfill\n * @param target\n * @param source\n * @returns {*}\n */\nexport function assignMissing (target, source) {\n  Object.keys(source || {}).forEach(key => {\n    if (!(key in target)) {\n      target[key] = source[key];\n    }\n  })\n  return target;\n}\n","import { assignMissing } from './objects'\n\nexport function buildRenderer(marked, options, result) {\n  const renderer = result.renderer = new marked.Renderer();\n\n  const markedOptions = { renderer };\n  assignMissing(markedOptions, options.marked || {});\n\n  // provide the render method, this will also be used later to render nested blocks\n  result.render = (md) => marked(md, markedOptions);\n\n  setupHeader(renderer, options, result);\n  setupCode(options, result);\n}\n\n/**\n *\n * @param renderer\n */\nfunction setupHeader(renderer, options, result) {\n  // heading extensions\n  renderer.heading = function (text, level) {\n    // you can set icons via icon::name\n    const icon = text.match(/icon::([a-z-]*)/);\n    let attributes = '';\n    if (icon) {\n      // indicate that this icon has been used\n      result.icons[icon[1]] = true;\n\n      attributes = ` class=\"${options.iconClassPrefix}${icon[1]}\"`;\n      text = text.replace(/icon::[a-z-]*/, '');\n    }\n\n    // we track headers 1 - 4 and add ids to them so that we can link to them later if we want to\n    if (level < 5) {\n      const header = result.headers[`h${level}`];\n      const index = header.length;\n      attributes += ` id=\"h${level}_${index}\"`;\n      header.push(text);\n    }\n\n    return `<h${level}${attributes}>${text}</h${level}>`;\n  }\n}\n\n/**\n * Handles code blocks in a variety of ways\n * @param options\n * @param result\n */\nfunction setupCode(options, result) {\n  const _code = result.renderer.code;\n\n  result.renderer.code = function(code, language) {\n    if (language) {\n      if (language.match(/^if:/)) {\n        return matchIfBlockLanguage(result, language) ? result.render(code) : '';\n      }\n      else if (language.match(/^if-not:/)) {\n        return matchIfBlockLanguage(result, language) ? '' : result.render(code);\n      }\n      else if (language.match(/^tab:/)) {\n        return handleTab(result, code, language);\n      }\n      else if (result.extensions[language]) {\n        return handleExtension(options, result, code, language);\n      }\n      else if (language === '%definitions' || language === '%doc') {\n        return wrapInBlockDiv(language, renderDefinitions(result, code));\n      }\n      else if (language[0] === '%') {\n        return wrapInBlockDiv(language, result.render(code));\n      }\n\n      // process line numbers, if they are set (i.e. ruby:10)\n      if (options.lineNumbers) {\n        code = lineNumbers(options, code, language);\n      }\n\n      // make sure this is a language and not some random tag\n      const foundLanguage = options.findLanguage(language.split(':')[0]);\n\n      if (foundLanguage) {\n        // if filtering is enabled and this is not the active language then filter it out\n        if (options.filterLanguages && foundLanguage !== result.language) {\n          return '';\n        }\n\n        // if CodeMirror is provided then highlight using that instead\n        if (options.cm) {\n          return highlightCM(options, code, foundLanguage, language);\n        }\n      }\n    }\n\n    return _code.call(result.renderer, code, language);\n  }\n}\n\nfunction lineNumbers(options, code, language) {\n  let lineNumber = getLineNumber(language);\n\n  // if there are line numbers, then add them now starting at the start index\n  if (lineNumber > 0) {\n    code = code.split('\\n').map(line => {\n      // pad out the spaces\n      // TODO: this code is naive and can only handle line numbers less than 999\n      let spaces = lineNumber < 10 ? '  ' : (lineNumber < 100 ? ' ' : '')\n      return `${spaces}${lineNumber++} ${line}`\n    }).join('\\n');\n  }\n\n  return code;\n}\n\nfunction highlightCM(options, code, language, raw) {\n  let lineNumber = options.lineNumbers ? getLineNumber(raw) : null;\n  const el = window.document.createElement('div');\n  options.cm.runMode(code, options.findMode(language), el);\n\n  const lnHtml = lineNumber > 0 ? `<div class=\"${options.lineNumbersGutter}\"></div>` : '';\n  return `<pre class=\"cm-runmode cm-s-${options.theme}\"><code>${lnHtml}${el.innerHTML}</code></pre>`;\n}\n\nfunction getLineNumber(language) {\n  const parts = language.split(':');\n  return parts.length > 1 ? parseInt(parts[1], 10) : null;\n}\n\nfunction wrapInBlockDiv(type, contents) {\n  return `<div class=\"block block--${type.replace(/^%/, '')}\">${contents}</div>`;\n}\n\nfunction matchIfBlockLanguage(result, language) {\n  return language.replace(/^if(-not)?: ?/, '').split(',').indexOf(result.language) >= 0;\n}\n\nfunction handleTab(result, code, language) {\n  // parts should be up to tab:LABEL with language being optional\n  const parts = language.split(':');\n  let label = parts[1].replace(/\\+/g, ' ');\n  result.tabs[label] = `${result.render(code)}`;\n  return '';\n}\n\n/**\n * If the extension value is a function, it will treat it as a render function, otherwise it will\n * assume the extension value is a string and treat it as a template with {code} as the code placeholder.\n * @param options\n * @param code\n * @param language\n */\nfunction handleExtension(options, result, code, language) {\n  const ext = result.extensions[language]\n\n  if (typeof ext.code === 'function') {\n    return ext(code, options);\n  }\n  else {\n    return ext.code.replace('{code}', code);\n  }\n}\n\n/**\n *\n * @param result\n * @param code\n * @returns {string}\n */\nfunction renderDefinitions (result, code) {\n  var html = '<dl>';\n  if (code) {\n    code.split('\\n').forEach(line => {\n      if (line.match(/^#/)) {\n        html += result.render(line);\n      }\n      else if (line.trim().match(/:$/)) {\n        html += `<dt>${line.replace(/:$/, '')}</dt>`;\n      }\n      else {\n        html += `<dd>${result.render(line)}</dd>`;\n      }\n    });\n  }\n\n  return html + '</dl>';\n}\n","export function upperCaseWords (str) {\n  if (!str) return str\n  return str.replace(/(?:^|\\s)\\S/g, a => a.toUpperCase())\n}\n\nexport function camelCase (str, pascal) {\n  const cased = upperCaseWords(str.replace(/_/g, ' ')).replace(/ /g, '')\n  return pascal ? cased : lowerCaseFirst(cased)\n}\n\nexport function lowerCaseFirst (str) {\n  return `${str[0].toLowerCase()}${str.substr(1)}`;\n}\n\nexport function escapeHtml (text) {\n  return text ? text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;') : text;\n}\n","import { escapeHtml } from '../strings'\n\n/**\n * Tracks some basic types that we convert for different languages. We don't need to try to\n * maintain a list for every type for every language we support, however we do want to track some\n * common types, such as hash, void, and primary types to minimize confusion.\n *\n * We will want to expand or trim this list as needed to find a good balance between useful and\n * too much language specialization.\n *\n */\nconst TYPES = {\n  void: {\n    'undefined': ['javascript'],\n    nil: ['ruby'],\n    None: ['python']\n  },\n  'null': {\n    nil: ['ruby'],\n    NSNull: ['objc'],\n    None: ['python']\n  },\n  object: {\n    NSObject: ['objc'],\n    _alias: 'hash'\n  },\n  hash: {\n    Hash: ['ruby'],\n    dict: ['python'],\n    Dictionary: ['csharp'],\n    HashMap: ['java'],\n    Object: ['javascript']\n  },\n  collection: {\n    List: ['java'],\n    Collection: ['csharp'],\n    _alias: 'list'\n  },\n  array: {\n    List: ['java'],\n    'NSArray*': ['objc'],\n    'std::list': ['cpp'],\n    default: 'Array'\n  },\n  list: {\n    Array: ['javascript', 'ruby', 'python', 'typescript'],\n    'std::list': ['cpp'],\n    default: 'List'\n  },\n  string: {\n    string: ['csharp', 'typescript'],\n    'std::string': ['cpp'],\n    'char*': ['c'],\n    'NSString *': ['objc'],\n    default: 'String'\n  },\n  integer: {\n    int: ['csharp', 'cpp', 'c'],\n    Int: ['swift'],\n    'NSNumber *': ['objc'],\n    Number: ['javascript'],\n    default: 'Integer'\n  },\n  boolean: {\n    bool: ['csharp', 'c', 'cpp'],\n    Bool: ['swift'],\n    BOOL: ['objc'],\n    boolean: ['java', 'typescript'],\n    default: 'Boolean'\n  },\n  float: {\n    float: ['csharp'],\n    Number: ['javascript'],\n    default: 'Float'\n  },\n}\n\nconst NULLABLE = {\n  csharp: {\n    default: 'Nullable<@@>'\n  }\n}\n\nexport function replaceDocTypes (language, content) {\n  return content.replace(/`?@@docType: ?([a-zA-Z_?]*(<.*,? ?.*>)?)`?/g, function (shell, value) {\n    const nullable = !!value.match(/\\?$/);\n    value = value.replace('?', '').trim();\n\n    if (value.indexOf('<') > 0) {\n      const parts = value.split(/[<>]/);\n      value = collectionType(language, parts[0], parts[1]);\n    }\n    else {\n      value = mapType(language, value);\n    }\n\n    if (nullable) {\n      value = mapNullable(language, value);\n    }\n\n    return wrap(value, shell, nullable);\n  })\n}\n\nfunction mapNullable (language, value) {\n  if (NULLABLE[language]) {\n    const config = NULLABLE[language][value] || NULLABLE[language].default;\n    if (config) {\n      return config.replace('@@', value);\n    }\n  }\n\n  return value;\n}\n\n\nfunction mapType (language, type, _default) {\n  const map = TYPES[type.toLowerCase()];\n  let mapped = null;\n  if (map) {\n    Object.keys(map).forEach(key => {\n      if (!mapped) {\n        if (key === 'default') {\n          mapped = map.default;\n        }\n        // if a string, then the value is an alias to another type\n        else if (key === '_alias') {\n          mapped = mapType(language, map._alias, type);\n        }\n        else if (map[key].indexOf(language) >= 0) {\n          mapped = key;\n        }\n      }\n    })\n    return mapped || _default || type;\n  }\n\n  return type;\n}\n\nfunction collectionType (language, type, nestedType) {\n  const nestedTypes = nestedType.split(/, ?/);\n\n  switch (language) {\n    case 'javascript':\n    case 'ruby':\n    case 'objc':\n    case 'python':\n      return `${mapType(language, type)} (of ${mapTypes(language, nestedTypes).join('s/')}s)`;\n\n    case 'csharp':\n      if (type === 'Array' && nestedTypes.length == 1) {\n        return `${mapType(language, nestedType)}[]`;\n      }\n      return collectionGeneric(language, type, nestedTypes);\n\n    default:\n      return collectionGeneric(language, type, nestedTypes);\n  }\n}\n\nfunction mapTypes(language, types) {\n  return types.map(t => mapType(language, t));\n}\n\nfunction collectionGeneric (language, type, nestedTypes) {\n  const mapped = mapTypes(language, nestedTypes).join(', ');\n  return `${mapType(language, type)}<${mapped}>`;\n}\n\n/**\n * Wraps the value within the necessary html to ensure that it gets rendered correctly\n * @param value\n * @param shell the shell of the @@docType syntax. Used to determine if a ` is present\n * @returns {string}\n */\nfunction wrap (value, shell) {\n  if (shell.indexOf('`') === 0) {\n    return shell.replace(/@@docType: ?([a-zA-Z_?]*(<.*,? ?.*>)?)/, value);\n  }\n  else {\n    return `<dfn class=\"doc-type\">${escapeHtml(value.trim())}</dfn>`;\n  }\n}\n","import { camelCase } from '../strings'\n\nexport const STYLES = {\n  Const: {\n    upper: ['default']\n  },\n  Param: {\n    camel: ['csharp']\n  },\n  // name acts as default\n  Name: {\n    camel: ['javascript', 'java'],\n    pascal: ['csharp']\n  }\n}\n\nexport function replaceDocNames (language, content) {\n\n  return content.replace(/`?@@doc(Name|Method|Const|Prop|Class|Param): ?([a-zA-Z0-9?_]*)`?/g, function (shell, type, value) {\n    return wrap(shell, type, () => {\n      const style = findStyle(type, language);\n\n      switch (style) {\n        case 'upper':\n          return value.toUpperCase();\n\n        case 'camel':\n          return camelCase(value);\n\n        case 'pascal':\n          return camelCase(value, true);\n\n        default:\n          return value;\n      }\n    })\n  })\n}\n\nfunction findStyle(type, language) {\n  let style = Object.keys(STYLES[type] || []).find(style => {\n    let _style = STYLES[type][style];\n    return _style ? _style.indexOf(language) >= 0 : false;\n  })\n\n  // try to find a default style for the type\n  if (!style && language !== 'default') {\n    style = findStyle(type, 'default');\n  }\n\n  // default to name if no specific style is set\n  if (!style && type !== 'Name') {\n    style = findStyle('Name', language);\n  }\n\n  return style;\n}\n\nfunction wrap (shell, type, value) {\n  value = value();\n  if (shell.indexOf('`') === 0) {\n    return shell.replace(/@@docName: ?([a-zA-Z0-9?_]*)/, value);\n  }\n  else {\n    return `<dfn class=\"doc-name doc-name--${type.toLowerCase()}\">${value}</dfn>`;\n  }\n}\n","export function replaceDocGlobals (language, content) {\n  return content.replace(/@@docGlobal: ?.*`?/g, function (value) {\n    switch (language) {\n      // languages which should keep the global class\n      case 'java':\n      case 'csharp':\n        return wrap(value.replace(/@@docGlobal: ?/, ''))\n\n      // all other languages remove the global class\n      default:\n        return wrap(value.replace(/@@docGlobal: ?[a-zA-Z\\d]*\\./, ''))\n    }\n  })\n}\n\nfunction wrap (value) {\n  return `<dfn class=\"doc-method\">${value}</dfn>`\n}\n","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      return !fn(el)\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n","import $script from 'scriptjs'\n\nconst loaded = {}\n\nexport function loadScript (url) {\n  return new Promise(resolve => $script(url, resolve))\n}\n\nexport function loadCSS (url) {\n  if (!loaded[url]) {\n    loaded[url] = url\n    const el = window.document.createElement('link')\n    el.setAttribute('href', url)\n    window.document.head.appendChild(el)\n  }\n}\n\nexport default { loadScript, loadCSS };\n","import { assignMissing } from './objects'\nimport { buildRenderer } from './renderer'\nimport { replaceDocTypes } from './doc-tokens/doc-types'\nimport { replaceDocNames } from './doc-tokens/doc-names'\nimport { replaceDocGlobals } from './doc-tokens/doc-globals'\nimport loader from './loader'\n\nexport const load = loader;\n\nexport const defaultOptions = {\n  // these are the options passed to marked directly\n  marked: {},\n  // languages that should be treated as extensions. You can configure how each gets handled\n  extensions: {\n    mermaid: {\n      // code handler\n      code: code => `<div class=\"mermaid\">${code}</div>`,\n      // will lazy load script automatically\n      src: 'https://cdn.rawgit.com/knsv/mermaid/6.0.0/dist/mermaid.min.js',\n      afterRender: () => window.mermaid.init()\n    },\n  },\n  // set to a method that that will receive a language and return the mapped\n  // name. if no name is returned, it is assumed that the language is an extension.\n  // The default method only handles a default set of languages.\n  findLanguage: (language) => defaultLanguages.indexOf(language) >= 0 ? language: null,\n\n  // used with CodeMirror.runMode, used to find the mode of the language. By default will just return the language\n  findMode: (language) => language,\n\n  // The highlight theme to add, only used with cm runMode\n  theme: 'neo',\n\n  // you can set icons within headers using icon::ICONNAME, this setting determines the icon class prefix used\n  iconClassPrefix: 'icon-',\n\n  // set to a value that should wrap standard languages. Use \"{slot}\" to indicate where the code should be inserted: i.e. '<div class=\"tab\">{code}</div>'. Can also be a function which takes (language, languages) as its parameters.\n  languageWrapper: null,\n\n  // the language that should be used for filtering out all other languages\n  language: null,\n\n  // true if languages should be filtered\n  filterLanguages: true,\n\n  // if the language value is not set, or is set to a value not found within the markdown, this\n  // setting will default the language to the first one found within the markdown.\n  defaultLanguageToFirst: true,\n\n  // true if line numbers should be added to highlighted code (if a starting line number is configured for the block)\n  lineNumbers: true,\n\n  // css class used to display a line number gutter, which can be used to try to create an opacity layer\n  // which will style the cm-number values differently. Set to null to disable adding a gutter.\n  lineNumbersGutter: 'cm-runmode-linenumbers-gutter',\n\n  // true if doc tokens should be parsed\n  docTokens: true,\n\n  // if set to an instance of js-yaml, it will process meta data at the top of the markdown.\n  jsYaml: null,\n\n  // If set to CodeMirror class, it will use CodeMirror.runMode to process syntax highlighting\n  // Note: make sure to import codemirror/addon/runmode/runmode.js first.\n  cm: null,\n\n  // if true, will try to load external extension scripts when they are needed\n  loadExtensionScripts: true,\n\n  // if set to a function, will be called back after all external scripts have loaded\n  loadCallback: null\n};\n\nexport const defaultLanguages = [\n  'c', 'clojure', 'coffeescript', 'cpp', 'csharp', 'elixir', 'erlang', 'fsharp',\n  'go', 'groovy', 'haskell', 'java', 'javascript', 'kotlin', 'objc', 'ocaml', 'php', 'python',\n  'r', 'ruby', 'scala', 'shell', 'solidity', 'sql', 'swift', 'typescript'\n]\n\n/**\n * Processes the markdown using marked along with the many extensions this library provides\n * @param marked The marked library, must be passed in since it is not included within this library as a dependency\n * @param markdown The markdown to process\n * @param options The extended set of options, as well as marked options. See defaultOptions for more details.\n * @returns {{originalLanguage, language, languages: [], extensions: [], tabs: {}, headers: {h1: Array, h2: Array, h3: Array, h4: Array}, icons: [], raw: *, preprocessed: *}}\n */\nexport function process(marked, markdown, options = {}) {\n  assignMissing(options, defaultOptions);\n\n  const result = {\n    originalLanguage: options.language,\n    language: options.language,\n    languages: {},\n    extensions: {},\n    tabs: {},\n    headers: {h1: [], h2: [], h3: [], h4: []},\n    icons: {},\n    raw: markdown,\n    preprocessed: markdown\n  };\n\n  if (options.jsYaml) {\n    processMeta(options, result);\n  }\n\n  processBlocks(options, result);\n  if (options.defaultLanguageToFirst) {\n    processLanguage(result);\n  }\n\n  buildRenderer(marked, options, result);\n\n  if (options.docTokens) {\n    processDocTokens(result);\n  }\n\n  result.html = result.render(result.preprocessed);\n\n  // convert objects which have been acting as basic sets to an array\n  ['languages', 'extensions', 'icons']\n    .forEach(key => result[key] = Object.keys(result[key]));\n\n  return result;\n}\n\n\nfunction processMeta(options, result) {\n  result.preprocessed = result.preprocessed.replace(/^---\\n(.*\\n)*\\.\\.\\. *\\n\\n?/, meta => {\n    const yaml = meta.replace(/^---\\n/, '').replace(/\\n\\.\\.\\. *\\n?/, '');\n    result.meta = options.jsYaml.safeLoad(yaml);\n\n    return '';\n  });\n}\n\n/**\n * Preprocesses the markdown before sending it through marked. This is used to process\n * doc tokens and any other future extensions that we support that don't require being handled\n * during the marked rendering.\n * @param result\n */\nfunction processDocTokens(result) {\n  const language = result.originalLanguage || result.language;\n  result.preprocessed = replaceDocNames(\n    language,\n    replaceDocTypes(\n      language,\n      replaceDocGlobals(\n        language,\n        result.preprocessed\n      )\n    )\n  );\n}\n\n/**\n * if no language was provided, or the one provided is not in the list of supported languages,\n * then switch to the first language found\n * @param result\n */\nfunction processLanguage(result) {\n  if (!result.language || !result.languages[result.language]) {\n    result.language = Object.keys(result.languages)[0];\n  }\n}\n\n/**\n * Loops through all ``` style blocks and figures out which are languages and which are\n * possibly extensions\n * @param markdown\n * @param options\n * @param result\n */\nfunction processBlocks(options, result) {\n  const blocks = (result.preprocessed.match(/^(```|~~~) ?(.*) *$/gm) || []).map(m => m.replace(/(```|~~~) ?/g, ''));\n\n  // loop through each block and track which are languages and which are extensions\n  blocks.forEach((text) => {\n    if (text) {\n      text = text.replace(/^if(-not)?: ?/, '').split(':')[0];\n\n      text.split(',').forEach(name => {\n        // % is a special token, we know these aren't either languages or extensions\n        if (name.indexOf('%') === -1) {\n          // if an extension has been defined for the language, track it now\n          if (options.extensions[name] >= 0) {\n            result.extensions[name] = true;\n          }\n          else {\n            const language = options.findLanguage(name);\n            if (language) {\n              result.languages[language] = true;\n            }\n          }\n        }\n      })\n    }\n  });\n}\n"],"names":["assignMissing","target","source","keys","forEach","key","buildRenderer","marked","options","result","renderer","Renderer","markedOptions","render","md","setupHeader","heading","text","level","icon","match","attributes","icons","iconClassPrefix","replace","header","headers","index","length","push","setupCode","_code","code","language","matchIfBlockLanguage","handleTab","extensions","handleExtension","wrapInBlockDiv","renderDefinitions","lineNumbers","foundLanguage","findLanguage","split","filterLanguages","cm","highlightCM","call","lineNumber","getLineNumber","map","spaces","line","join","raw","el","window","document","createElement","runMode","findMode","lnHtml","lineNumbersGutter","theme","innerHTML","parts","parseInt","type","contents","indexOf","label","tabs","ext","html","trim","upperCaseWords","str","a","toUpperCase","camelCase","pascal","cased","lowerCaseFirst","toLowerCase","substr","escapeHtml","TYPES","NULLABLE","replaceDocTypes","content","shell","value","nullable","collectionType","mapType","mapNullable","wrap","config","default","_default","mapped","_alias","nestedType","nestedTypes","mapTypes","collectionGeneric","types","t","STYLES","replaceDocNames","style","findStyle","Object","find","_style","replaceDocGlobals","loaded","loadScript","url","Promise","$script","resolve","loadCSS","setAttribute","head","appendChild","load","loader","defaultOptions","mermaid","init","defaultLanguages","process","markdown","h1","h2","h3","h4","jsYaml","defaultLanguageToFirst","docTokens","preprocessed","processMeta","yaml","meta","safeLoad","processDocTokens","originalLanguage","processLanguage","languages","processBlocks","blocks","m","name"],"mappings":"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"}